package Compute;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StreamTokenizer;
//敌人的敌人就是朋友
class Solution {
	int[] par = new int[200005], rank = new int[200005];// x,x+n:x属于dragon,x属于snake;

	public void init(int n) {
		for (int i = 1; i <= n * 2; i++) {
			par[i] = i;
			rank[i] = 0;
		}
	}

	public int find(int x) {
		if (par[x] == x)
			return x;
		return par[x] = find(par[x]);
	}

	public void unite(int x, int y) {
		x = find(x);
		y = find(y);
		if (x == y)
			return;
		if (rank[x] < rank[y])
			par[x] = y;
		else {
			par[y] = x;
			if (rank[x] == rank[y])
				rank[x]++;
		}

	}

	public boolean same(int x, int y) {
		return find(x) == find(y);
	}
}

public class Main {
	public static void main(String[] args) throws IOException {
		StreamTokenizer input = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
		Solution s = new Solution();
		input.nextToken();
		int t = (int) input.nval;
		for (int i = 0; i < t; i++) {
			input.nextToken();
			int n = (int) input.nval;
			input.nextToken();
			int m = (int) input.nval;
			s.init(n);
			for (int j = 0; j < m; j++) {
				input.nextToken();
				char op = input.sval.charAt(0);
				input.nextToken();
				int x = (int) input.nval;
				input.nextToken();
				int y = (int) input.nval;
				if (op == 'A') {
					if (s.same(x, y) || s.same(x + n, y + n)) {
						System.out.println("In the same gang.");
					} else if (s.same(x, y + n) || s.same(x + n, y)) {
						System.out.println("In different gangs.");
					} else {
						System.out.println("Not sure yet.");
					}
				} else {
					s.unite(x, y + n);
					s.unite(x + n, y);
				}

			}

		}
	}
}